[{"categories":["Guide"],"content":"Hugo 是采用 Go 语言开发的一种开源网站搭建框架，具有速度快、灵活、可扩展性强的特点。","date":"2021-12-01","objectID":"/hugo-based-blog-guide/","tags":["blog","Hugo"],"title":"基于 Hugo 的个人博客体系不完全指南","uri":"/hugo-based-blog-guide/"},{"categories":["Guide"],"content":" 什么是 hugo ？ Hugo 是采用 Go 语言开发的一种开源网站搭建框架，具有速度快、灵活、可扩展性强的特点。 主要内容 博客搭建 博客美化 博客功能扩展 博文发布的解决方案 ","date":"2021-12-01","objectID":"/hugo-based-blog-guide/:0:0","tags":["blog","Hugo"],"title":"基于 Hugo 的个人博客体系不完全指南","uri":"/hugo-based-blog-guide/"},{"categories":["Guide"],"content":"博客搭建 ","date":"2021-12-01","objectID":"/hugo-based-blog-guide/:1:0","tags":["blog","Hugo"],"title":"基于 Hugo 的个人博客体系不完全指南","uri":"/hugo-based-blog-guide/"},{"categories":["Guide"],"content":"需准备 Git Git 的安装方法请参阅这里 ","date":"2021-12-01","objectID":"/hugo-based-blog-guide/:1:1","tags":["blog","Hugo"],"title":"基于 Hugo 的个人博客体系不完全指南","uri":"/hugo-based-blog-guide/"},{"categories":["Guide"],"content":"Step 1：安装 Hugo 本示例基于 MacOS ，其他操作系统下 Hugo 的安装方法请参阅 安装 打开 Terminal ，使用 homebraw 安装： brew install hugo 验证安装是否成功，请执行： hugo version 返回结果如下则表明安装成功。 extended 表明 Hugo 版本为扩展版本，支持 Sass / Scss , 更多信息，请参考 Sass ","date":"2021-12-01","objectID":"/hugo-based-blog-guide/:1:2","tags":["blog","Hugo"],"title":"基于 Hugo 的个人博客体系不完全指南","uri":"/hugo-based-blog-guide/"},{"categories":["Guide"],"content":"Step 2：创建一个新的博客项目 准备一个 Hugo 的工作目录，在该目录下执行： hugo new site \u003c博客项目名\u003e 出现如下信息则证明创建成功。 ","date":"2021-12-01","objectID":"/hugo-based-blog-guide/:1:3","tags":["blog","Hugo"],"title":"基于 Hugo 的个人博客体系不完全指南","uri":"/hugo-based-blog-guide/"},{"categories":["Guide"],"content":"Step 3：安装主题 进入该博客项目目录，目录结构如下： archetypes content data layouts static themes config.toml 如何添加主题呢？ 本次示例选择的是 LoveIt 主题 首先，从 Github 下载主题并将其添加到博客项目目录的 theme 目录中： cd mi2mcn git init git submodule add https://github.com/dillonzq/LoveIt.git themes/LoveIt 接下来，需要配置 config.toml 文件， 我们选择直接拷贝 LoveIt 主题中的实例网站的配置文件： cp -p themes/LoveIt/exampleSite/config.toml . 然后将配置文件中的 themesDir 项更改为如下内容： # 主题目录 themesDir = \"./themes\" 最后，执行如下命令，在本地开启一个 Web 服务器： hugo server -D 根据提示信息，在本地浏览器中访问 http://localhost:1313/ ，返回如下页面则代表搭建成功。 这里的图片显示有误，是因为我们没有修改配置文件中默认的图片路径，后续根据个人情况修改即可。 添加文章 所有文章都在 content/post 目录下 使用命令添加 hugo new posts/my-first-post.md 直接在 content/posts 目录下添加 markdown 文件即可 ","date":"2021-12-01","objectID":"/hugo-based-blog-guide/:1:4","tags":["blog","Hugo"],"title":"基于 Hugo 的个人博客体系不完全指南","uri":"/hugo-based-blog-guide/"},{"categories":["Guide"],"content":"博客美化 每个主题的配置都是有差异的，本示例以 LoveIt 主题为基准进行个性化设置和美化。 配置文件 LoveIt 主题的配置文件主要分为以下几个部分： # baseURL # 主题目录 # 网站通用设置： 标题、语言设置、作者设置等 # 网站导航栏设置 # 网站页面底部设置 # 网站主页设置：主页信息、主页文章列表、主页社交信息等 # 网站分区设置 # 网站列表设置 # 网站APP端设置 # 网站搜索设置 # 文章页面设置 # 文章评论设置 # 第三方库配置 # 页面 SEO 配置 # TypeIt 配置 # 网站分析配置 # CDN 配置 # hugo 解析文档配置 # 网站地图配置 ## 支持多语言 主页美化 在站点目录下的 config.toml 中按需修改即可。 ","date":"2021-12-01","objectID":"/hugo-based-blog-guide/:2:0","tags":["blog","Hugo"],"title":"基于 Hugo 的个人博客体系不完全指南","uri":"/hugo-based-blog-guide/"},{"categories":["Guide"],"content":"博客功能扩展 ","date":"2021-12-01","objectID":"/hugo-based-blog-guide/:3:0","tags":["blog","Hugo"],"title":"基于 Hugo 的个人博客体系不完全指南","uri":"/hugo-based-blog-guide/"},{"categories":["Guide"],"content":"全文搜索 搜索功能我们使用第三方的 algolia 实现 ","date":"2021-12-01","objectID":"/hugo-based-blog-guide/:3:1","tags":["blog","Hugo"],"title":"基于 Hugo 的个人博客体系不完全指南","uri":"/hugo-based-blog-guide/"},{"categories":["Guide"],"content":"评论功能 评论功能我们使用第三方的 valine 实现 ","date":"2021-12-01","objectID":"/hugo-based-blog-guide/:3:2","tags":["blog","Hugo"],"title":"基于 Hugo 的个人博客体系不完全指南","uri":"/hugo-based-blog-guide/"},{"categories":["Guide"],"content":"博客发布方案 ","date":"2021-12-01","objectID":"/hugo-based-blog-guide/:4:0","tags":["blog","Hugo"],"title":"基于 Hugo 的个人博客体系不完全指南","uri":"/hugo-based-blog-guide/"},{"categories":["Guide"],"content":"github pages + Action ","date":"2021-12-01","objectID":"/hugo-based-blog-guide/:5:0","tags":["blog","Hugo"],"title":"基于 Hugo 的个人博客体系不完全指南","uri":"/hugo-based-blog-guide/"},{"categories":["Guide"],"content":"jenkins","date":"2021-12-01","objectID":"/hugo-based-blog-guide/:5:1","tags":["blog","Hugo"],"title":"基于 Hugo 的个人博客体系不完全指南","uri":"/hugo-based-blog-guide/"},{"categories":["Guide"],"content":"ElasticSearch 负责储存日志信息，Grafana 负责对日志信息进行监控和告警","date":"2021-02-01","objectID":"/es-grafana-based-log-alert/","tags":["Grafana","Elasticsearch"],"title":"基于 Grafana 和 Elasticsearch 对日志信息进行监控告警","uri":"/es-grafana-based-log-alert/"},{"categories":["Guide"],"content":" 在公司环境中，除了日志的存储和可视化需求外，我们常常需要对日志信息进行监控，关注某些报错信息，目前最常用的日志架构是 ELK ，即 Elasticsearch 、LogStash 和 Kibana 的组合，其中 LogStash 负责日志的采集和过滤，ElasticSearch 负责日志的存储，而 Kibana 则负责日志的可视化，而日志的告警则可以通过 Grafana 来实现。 Grafana 是一个开源的数据可视化组件，经常被用作时间序列数据可视化和分析。它支持很多数据源，这其中包括 Prometheus 、 OpenTSDB 、Graphite 、InfluxDB 、Elasticsearch 等等。Grafana 支持从数据源中查询数据，支持组合多个不同数据源中的数据到一个展示仪表盘上，同时最新的 Grafana 也继承了告警组件，可以实现对数据源信息的监控和告警。 ","date":"2021-02-01","objectID":"/es-grafana-based-log-alert/:0:0","tags":["Grafana","Elasticsearch"],"title":"基于 Grafana 和 Elasticsearch 对日志信息进行监控告警","uri":"/es-grafana-based-log-alert/"},{"categories":["Guide"],"content":"添加 Elasticsearch 数据源 step 1：登录 Grafana 登录你的 Grafana 管理界面 step 2：添加数据源 点击左侧 Configuration （小齿轮），选择 Data Sources: 点击右上角 Add data source: 选择 Logging \u0026 document database 中的 Elasticsearch： 填写对应信息，然后点击 Save \u0026 Test: 返回如下信息则代表添加数据源成功： step 3：添加告警组件 点击左侧 Alerting（铃铛），选择 Notification channels: 点击 New channel： 填写以下信息，点击 Save 保存即可： step 4：添加仪表盘 点击右侧的 Create（“+”号），选择 Dashboard: 点击 Add new panel: 选择正确的数据源： 填写查询条件： 点击 Alert 下的 Create Alert: 设置告警策略： 设置告警信息的接受者和告警提示信息： ","date":"2021-02-01","objectID":"/es-grafana-based-log-alert/:1:0","tags":["Grafana","Elasticsearch"],"title":"基于 Grafana 和 Elasticsearch 对日志信息进行监控告警","uri":"/es-grafana-based-log-alert/"},{"categories":null,"content":"关于 LoveIt","date":"2019-08-02","objectID":"/about/","tags":null,"title":"主题模板","uri":"/about/"},{"categories":null,"content":"  LoveIt 是一个由 Dillon 开发的简洁、优雅且高效的 Hugo 博客主题。 它的原型基于 LeaveIt 主题 和 KeepIt 主题。 Hugo 主题 LoveItHugo 主题 LoveIt \" Hugo 主题 LoveIt ","date":"2019-08-02","objectID":"/about/:0:0","tags":null,"title":"主题模板","uri":"/about/"},{"categories":null,"content":"特性 性能和 SEO  性能优化：在 Google PageSpeed Insights 中， 99/100 的移动设备得分和 100/100 的桌面设备得分  使用基于 JSON-LD 格式 的 SEO SCHEMA 文件进行 SEO 优化  支持 Google Analytics  支持 Fathom Analytics  支持 Plausible Analytics  支持搜索引擎的网站验证 (Google, Bind, Yandex and Baidu)  支持所有第三方库的 CDN  基于 lazysizes 自动转换图片为懒加载 外观和布局  桌面端/移动端 响应式布局  浅色/深色 主题模式  全局一致的设计语言  支持分页  易用和自动展开的文章目录  支持多语言和国际化  美观的 CSS 动画 社交和评论系统  支持 Gravatar 头像  支持本地头像  支持多达 67 种社交链接  支持多达 24 种网站分享  支持 Disqus 评论系统  支持 Gitalk 评论系统  支持 Valine 评论系统  支持 Facebook comments 评论系统  支持 Telegram comments 评论系统  支持 Commento 评论系统  支持 utterances 评论系统  支持 giscus 评论系统 扩展功能  支持基于 Lunr.js 或 algolia 的搜索  支持 Twemoji  支持代码高亮  一键复制代码到剪贴板  支持基于 lightGallery 的图片画廊  支持 Font Awesome 图标的扩展 Markdown 语法  支持上标注释的扩展 Markdown 语法  支持分数的扩展 Markdown 语法  支持基于 $\\KaTeX$ 的数学公式  支持基于 mermaid 的图表 shortcode  支持基于 ECharts 的交互式数据可视化 shortcode  支持基于 Mapbox GL JS 的 Mapbox shortcode  支持基于 APlayer 和 MetingJS 的音乐播放器 shortcode  支持 Bilibili 视频 shortcode  支持多种注释的 shortcode  支持自定义样式的 shortcode  支持自定义脚本的 shortcode  支持基于 TypeIt 的打字动画 shortcode  支持基于 cookieconsent 的 Cookie 许可横幅 … ","date":"2019-08-02","objectID":"/about/:0:1","tags":null,"title":"主题模板","uri":"/about/"},{"categories":null,"content":"许可协议 LoveIt 根据 MIT 许可协议授权。 更多信息请查看 LICENSE 文件。 ","date":"2019-08-02","objectID":"/about/:0:2","tags":null,"title":"主题模板","uri":"/about/"},{"categories":null,"content":"特别感谢 LoveIt 主题中用到了以下项目，感谢它们的作者： normalize.css Font Awesome Simple Icons Animate.css autocomplete Lunr.js algoliasearch lazysizes object-fit-images Twemoji emoji-data lightGallery clipboard.js Sharer.js TypeIt $\\KaTeX$ mermaid ECharts Mapbox GL JS APlayer MetingJS Gitalk Valine cookieconsent ","date":"2019-08-02","objectID":"/about/:0:3","tags":null,"title":"主题模板","uri":"/about/"}]